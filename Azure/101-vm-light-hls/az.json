{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "namePrefix": {
      "type": "string",
      "minLength": 2,
      "maxLength": 50,
      "metadata": {
        "description": "Service name prefix must only contain lowercase letters, digits or dashes, cannot use dash as the first two or last one characters, cannot contain consecutive dashes, and is limited between 2 and 50 characters in length."
      }
    },
    "vmAdminUsername": {
      "type": "string",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "vmAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password for the Virtual Machine."
      }
    },
    "vmOS": {
      "type": "string",
      "defaultValue": "debian",
      "allowedValues": [
        "debian",
        "ubuntu",
        "centos",
        "redhat",
        "windowsserver2016"
      ],
      "metadata": {
        "description": "The Operating System to be installed on the VM. Default value debian. Allowed values: debian,ubuntu,centos,redhat,nanoserver2016,windowsserver2016"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Small",
      "allowedValues": [
        "Small",
        "Medium",
        "Large",
        "XLarge"
      ],
      "metadata": {
        "description": "Configuration Size: VM Size + Disk Size"
      }
    },
    "rtmpPath": {
      "type": "string",
      "defaultValue": "live/stream",
      "metadata": {
        "description": "RTMP path associated with the live service"
      }
    },
    "containerName": {
      "type": "string",
      "defaultValue": "rtmpcontainer",
      "metadata": {
        "description": "Container Name where the audio/video chunks are stored"
      }
    }
  },
  "variables": {
    "location": "[resourceGroup().location]",
    "vmName": "[concat(parameters('namePrefix'), 'vm')]",
    "vmSize": "[variables('configurationSize').vmSize]",
    "vmDataDiskSize": "[variables('configurationSize').diskSize]",
    "replicaCount": "1",
    "partitionCount": "1",
    "hostingMode": "default",
    "configurationSizeSmall": {
      "vmSize": "Standard_D2s_v3",
      "diskSize": "128"
    },
    "configurationSizeMedium": {
      "vmSize": "Standard_D4s_v3",
      "diskSize": "256"
    },
    "configurationSizeLarge": {
      "vmSize": "Standard_D8s_v3",
      "diskSize": "512"
    },
    "configurationSizeXLarge": {
      "vmSize": "Standard_D16s_v3",
      "diskSize": "1024"
    },
    "configurationOS": {
      "debian": {
        "publisher": "credativ",
        "offer": "Debian",
        "sku": "9",
        "version": "latest",
        "installScriptUrl": "https://raw.githubusercontent.com/flecoqui/RTMPIngest/master/Azure/101-vm-light-hls/install-software.sh",
        "installScriptFileName": "install-software.sh",
        "commandToExecute": "[concat('sh install-software.sh \"',  variables('vmName'), '.', resourceGroup().location, '.cloudapp.azure.com','\"')]",
        "extensionPublisher": "Microsoft.Azure.Extensions",
        "extensionType": "CustomScript",
        "extensionTypeHandlerVersion": "2.0",
        "remoteCommand": "[concat('ssh ', parameters('vmAdminUsername'), '@', variables('vmName'), '.', resourceGroup().location, '.cloudapp.azure.com')]",
        "logInformation": "sudo cat /var/lib/waagent/custom-script/download/0/stdout",
        "httpUrl": "[concat('http://', variables('vmName'), '.', resourceGroup().location, '.cloudapp.azure.com/api/values')]"
      },
      "ubuntu": {
        "publisher": "Canonical",
        "offer": "UbuntuServer",
        "sku": "18.04-LTS",
        "version": "latest",
        "installScriptUrl": "https://raw.githubusercontent.com/flecoqui/RTMPIngest/master/Azure/101-vm-light-hls/install-software.sh",
        "installScriptFileName": "install-software.sh",
        "commandToExecute": "[concat('sh install-software.sh \"',  variables('vmName'), '.', resourceGroup().location, '.cloudapp.azure.com','\"')]",
        "extensionPublisher": "Microsoft.Azure.Extensions",
        "extensionType": "CustomScript",
        "extensionTypeHandlerVersion": "2.0",
        "remoteCommand": "[concat('ssh ', parameters('vmAdminUsername'), '@', variables('vmName'), '.', resourceGroup().location, '.cloudapp.azure.com')]",
        "logInformation": "sudo cat /var/lib/waagent/custom-script/download/0/stdout",
        "httpUrl": "[concat('http://', variables('vmName'), '.', resourceGroup().location, '.cloudapp.azure.com/api/values')]"
      },
      "centos": {
        "publisher": "openlogic",
        "offer": "centos",
        "sku": "7.5",
        "version": "latest",
        "installScriptUrl": "https://raw.githubusercontent.com/flecoqui/RTMPIngest/master/Azure/101-vm-light-hls/install-software.sh",
        "installScriptFileName": "install-software.sh",
        "commandToExecute": "[concat('sh install-software.sh \"',  variables('vmName'), '.', resourceGroup().location, '.cloudapp.azure.com','\"')]",
        "extensionPublisher": "Microsoft.Azure.Extensions",
        "extensionType": "CustomScript",
        "extensionTypeHandlerVersion": "2.0",
        "remoteCommand": "[concat('ssh ', parameters('vmAdminUsername'), '@', variables('vmName'), '.', resourceGroup().location, '.cloudapp.azure.com')]",
        "logInformation": "sudo cat /var/lib/waagent/custom-script/download/0/stdout",
        "httpUrl": "[concat('http://', variables('vmName'), '.', resourceGroup().location, '.cloudapp.azure.com/api/values')]"
      },
      "redhat": {
        "publisher": "RedHat",
        "offer": "RHEL",
        "sku": "7.2",
        "version": "latest",
        "installScriptUrl": "https://raw.githubusercontent.com/flecoqui/RTMPIngest/master/Azure/101-vm-light-hls/install-software.sh",
        "installScriptFileName": "install-software.sh",
        "commandToExecute": "[concat('sh install-software.sh \"',  variables('vmName'), '.', resourceGroup().location, '.cloudapp.azure.com','\"')]",
        "extensionPublisher": "Microsoft.Azure.Extensions",
        "extensionType": "CustomScript",
        "extensionTypeHandlerVersion": "2.0",
        "remoteCommand": "[concat('ssh ', parameters('vmAdminUsername'), '@', variables('vmName'), '.', resourceGroup().location, '.cloudapp.azure.com')]",
        "logInformation": "sudo cat /var/lib/waagent/custom-script/download/0/stdout",
        "httpUrl": "[concat('http://', variables('vmName'), '.', resourceGroup().location, '.cloudapp.azure.com/api/values')]"
      },
      "windowsserver2016": {
        "publisher": "MicrosoftWindowsServer",
        "offer": "WindowsServer",
        "sku": "2016-Datacenter",
        "version": "latest",
        "installScriptUrl": "https://raw.githubusercontent.com/flecoqui/RTMPIngest/master/Azure/101-vm-light-hls/install-software-windows.ps1",
        "installScriptFileName": "install-software-windows.ps1",
        "commandToExecute": "[concat('powershell.exe -ExecutionPolicy Unrestricted -File install-software-windows.ps1 \"',  variables('vmName'), '.', resourceGroup().location, '.cloudapp.azure.com','\"' )]",
        "extensionPublisher": "Microsoft.Compute",
        "extensionType": "CustomScriptExtension",
        "extensionTypeHandlerVersion": "1.7",
        "remoteCommand": "[concat('mstsc /admin /v:', variables('vmName'), '.', resourceGroup().location, '.cloudapp.azure.com')]",
        "logInformation": "type c:\\testrest\\log\\install.log",
        "httpUrl": "[concat('http://', variables('vmName'), '.', resourceGroup().location, '.cloudapp.azure.com')]"
      },
      "nanoserver2016": {
        "publisher": "MicrosoftWindowsServer",
        "offer": "WindowsServer",
        "sku": "2016-Nano-Server",
        "version": "latest",
        "installScriptUrl": "https://raw.githubusercontent.com/flecoqui/RTMPIngest/master/Azure/101-vm-light-hls/install-software-windows.ps1",
        "installScriptFileName": "install-software-windows.ps1",
        "commandToExecute": "[concat('powershell.exe -ExecutionPolicy Unrestricted -File install-software-windows.ps1 \"',  variables('vmName'), '.', resourceGroup().location, '.cloudapp.azure.com','\"' )]",
        "extensionPublisher": "Microsoft.Compute",
        "extensionType": "CustomScriptExtension",
        "extensionTypeHandlerVersion": "1.7",
        "remoteCommand": "[concat('Set-Item WSMan:\\localhost\\Client\\TrustedHosts ', variables('vmName'), '.', resourceGroup().location, '.cloudapp.azure.com',' Enter-PSSession -ComputerName  \"', variables('vmName'), '.', resourceGroup().location, '.cloudapp.azure.com', '\"  -Credential ', parameters('vmAdminUsername') )]",
        "logInformation": "type c:\\source\\install.log",
        "httpUrl": "[concat('http://', variables('vmName'), '.', resourceGroup().location, '.cloudapp.azure.com')]"
      }
    },
    "configurationSize": "[variables(concat('configurationSize', parameters('vmSize')))]",
    "apiVersion": "2015-06-15",
    "apiStorageVersion": "2018-02-01",
    "storageAccountNamePrefix": "[toLower(substring(concat(parameters('namePrefix'), uniqueString(resourceGroup().id)), 0, 8))]",
    "storageAccountName": "testrtmplxslk74ch6s2isa",
    "storageAccountType": "Standard_LRS",
    "vmStorageAccountContainerName": "vhds",
    "OSDiskName": "osdisksimplevm",
    "dataDisk1VhdName": "[concat(parameters('namePrefix'), 'datadisk')]",
    "networkSecurityGroupName": "[concat(parameters('namePrefix'), 'nsg')]",
    "serviceSasFunctionValues": {
      "signedVersion": "2019-02-02",
      "signedServices": "bfqt",
      "signedResourceTypes": "sco",
      "signedPermission": "rwdlac",
      "signedStart": "2020-01-01T00:00:01Z",
      "signedExpiry": "2030-01-01T00:00:01Z",
      "signedProtocol": "https",
      "keyToSign": "key1"
    },
    "nicName": "[concat(parameters('namePrefix'), 'nic')]",
    "addressPrefix": "10.0.0.0/16",
    "subnetName": "[concat(parameters('namePrefix'), 'subnet')]",
    "subnetPrefix": "10.0.0.0/24",
    "publicIPAddressName": "[concat(parameters('namePrefix'), 'ip')]",
    "publicIPAddressType": "Dynamic",
    "virtualNetworkName": "[concat(parameters('namePrefix'), 'vnet')]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "[variables('apiStorageVersion')]",
      "location": "[resourceGroup().location]",
      "sku": {
        "name": "[variables('storageAccountType')]"
      },
      "kind": "Storage",
      "resources": [
        {
          "type": "blobServices/containers",
          "apiVersion": "[variables('apiStorageVersion')]",
          "name": "[concat('default/', parameters('containerName'))]",
          "dependsOn": [
            "[variables('storageAccountName')]"
          ],
          "properties": {
            "publicAccess": "None"
          }
        }
      ]
    }
  ],
  "outputs": {
    "storageAccount": {
      "type": "string",
      "value": "[concat('https://',variables('storageAccountName'),'.blob.core.windows.net/', parameters('containerName'))]"
    },
    "storageKey": {
      "type": "string",
      "value": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')),variables('apiStorageVersion')).keys[0].value]"
    },
    "storageSasToken": {
      "type": "string",
      "value": "[listAccountSas(variables('storageAccountName'), variables('apiStorageVersion'), variables('serviceSasFunctionValues')).accountSasToken]"
    },
    "httpCmd": {
      "type": "string",
      "value": "[concat('http://',variables('vmName'),'.', resourceGroup().location, '.cloudapp.azure.com')]"
    },
    "ffmpegCmd": {
      "type": "string",
      "value": "[concat('ffmpeg.exe -v verbose -f dshow -i video=\"Integrated Webcam\":audio=\"Microphone (Realtek(R) Audio)\"  -video_size 1280x720 -strict -2 -c:a aac -b:a 192k -ar 44100 -r 30 -g 60 -keyint_min 60 -b:v 2000000 -c:v libx264 -preset veryfast  -profile main -level 3.0 -pix_fmt yuv420p -bufsize 1800k -maxrate 400k  -f flv rtmp://',variables('vmName'),'.', resourceGroup().location, '.cloudapp.azure.com:1935/',  parameters('rtmpPath'))]"
    }
  }
}